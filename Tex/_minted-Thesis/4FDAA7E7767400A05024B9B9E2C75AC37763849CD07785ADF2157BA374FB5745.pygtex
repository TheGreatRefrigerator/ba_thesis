\begin{Verbatim}[commandchars=\\\{\}]

\PYG{c+cm}{censed to GIScience Research Group, Heidelberg University (GIScience)}

\PYG{c+cm}{ttp://www.giscience.uni\PYGZhy{}hd.de}
\PYG{c+cm}{ttp://www.heigit.org}

\PYG{c+cm}{der one or more contributor license agreements. See the NOTICE file }
\PYG{c+cm}{stributed with this work for additional information regarding copyright }
\PYG{c+cm}{nership. The GIScience licenses this file to you under the Apache License, }
\PYG{c+cm}{rsion 2.0 (the \PYGZdq{}License\PYGZdq{}); you may not use this file except in compliance }
\PYG{c+cm}{th the License. You may obtain a copy of the License at}

\PYG{c+cm}{   http://www.apache.org/licenses/LICENSE\PYGZhy{}2.0}

\PYG{c+cm}{less required by applicable law or agreed to in writing, software}
\PYG{c+cm}{stributed under the License is distributed on an \PYGZdq{}AS IS\PYGZdq{} BASIS,}
\PYG{c+cm}{THOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.}
\PYG{c+cm}{e the License for the specific language governing permissions and}
\PYG{c+cm}{mitations under the License.}

\PYG{k+kn}{e} \PYG{n+nn}{heigit.ors.routing.graphhopper.extensions.storages.builders}\PYG{o}{;}

 \PYG{n+nn}{java.util.ArrayList}\PYG{o}{;}
 \PYG{n+nn}{java.util.HashSet}\PYG{o}{;}
 \PYG{n+nn}{java.util.List}\PYG{o}{;}
 \PYG{n+nn}{java.util.Map}\PYG{o}{;}
 \PYG{n+nn}{java.util.Set}\PYG{o}{;}
 \PYG{n+nn}{java.util.Map.Entry}\PYG{o}{;}
 \PYG{n+nn}{java.util.regex.Matcher}\PYG{o}{;}
 \PYG{n+nn}{java.util.regex.Pattern}\PYG{o}{;}

 \PYG{n+nn}{com.graphhopper.GraphHopper}\PYG{o}{;}
 \PYG{n+nn}{com.graphhopper.reader.ReaderWay}\PYG{o}{;}
 \PYG{n+nn}{com.graphhopper.storage.GraphExtension}\PYG{o}{;}
 \PYG{n+nn}{com.graphhopper.util.EdgeIteratorState}\PYG{o}{;}
 \PYG{n+nn}{com.graphhopper.util.Helper}\PYG{o}{;}

 \PYG{n+nn}{heigit.ors.routing.graphhopper.extensions.HeavyVehicleAttributes}\PYG{o}{;}
 \PYG{n+nn}{heigit.ors.routing.graphhopper.extensions.VehicleDimensionRestrictions}\PYG{o}{;}
 \PYG{n+nn}{heigit.ors.routing.graphhopper.extensions.storages.EmergencyVehicleAttributesGraphStorage}\PYG{o}{;}

 \PYG{k+kd}{class} \PYG{n+nc}{EmergencyVehicleGraphStorageBuilder} \PYG{k+kd}{extends}
\PYG{n}{ractGraphStorageBuilder} \PYG{o}{\PYGZob{}}
\PYG{k+kd}{te} \PYG{k+kt}{boolean} \PYG{n}{\PYGZus{}includeRestrictions} \PYG{o}{=} \PYG{k+kc}{true}\PYG{o}{;}
\PYG{k+kd}{te} \PYG{n}{EmergencyVehicleAttributesGraphStorage} \PYG{n}{\PYGZus{}storage}\PYG{o}{;}
\PYG{k+kd}{te} \PYG{k+kt}{int} \PYG{n}{\PYGZus{}hgvType} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{;}
\PYG{k+kd}{te} \PYG{k+kt}{boolean} \PYG{n}{\PYGZus{}hasRestrictionValues}\PYG{o}{;}
\PYG{k+kd}{te} \PYG{k+kt}{double}\PYG{o}{[]} \PYG{n}{\PYGZus{}restrictionValues} \PYG{o}{=} \PYG{k}{new} \PYG{k+kt}{double}\PYG{o}{[}\PYG{n}{VehicleDimensionRestrictions}\PYG{o}{.}\PYG{n+na}{Count}\PYG{o}{];}
\PYG{k+kd}{te} \PYG{n}{List}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{\PYGZgt{}} \PYG{n}{\PYGZus{}motorVehicleRestrictions} \PYG{o}{=} \PYG{k}{new} \PYG{n}{ArrayList}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{\PYGZgt{}(}

\PYG{k+kd}{te} \PYG{n}{Set}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{\PYGZgt{}} \PYG{n}{\PYGZus{}motorVehicleRestrictedValues} \PYG{o}{=} \PYG{k}{new} \PYG{n}{HashSet}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{\PYGZgt{}(}

\PYG{k+kd}{te} \PYG{n}{Pattern} \PYG{n}{\PYGZus{}patternHeight}\PYG{o}{;}

\PYG{k+kd}{c} \PYG{n+nf}{EmergencyVehicleGraphStorageBuilder}\PYG{o}{()} \PYG{o}{\PYGZob{}}
\PYG{c+c1}{o restrictions for emergency vehicles needed}
\PYG{c+c1}{motorVehicleRestrictions.addAll(Arrays.asList(\PYGZdq{}motorcar\PYGZdq{},}
\PYG{c+c1}{motor\PYGZus{}vehicle\PYGZdq{}, \PYGZdq{}vehicle\PYGZdq{}, \PYGZdq{}access\PYGZdq{}));}

\PYG{c+c1}{motorVehicleRestrictedValues.add(\PYGZdq{}private\PYGZdq{});}
\PYG{c+c1}{motorVehicleRestrictedValues.add(\PYGZdq{}no\PYGZdq{});}
\PYG{c+c1}{motorVehicleRestrictedValues.add(\PYGZdq{}restricted\PYGZdq{});}
\PYG{c+c1}{motorVehicleRestrictedValues.add(\PYGZdq{}military\PYGZdq{});}

\PYG{n}{ternHeight} \PYG{o}{=} \PYG{n}{Pattern}\PYG{o}{.}\PYG{n+na}{compile}\PYG{o}{(}
\PYG{l+s}{?:\PYGZbs{}\PYGZbs{}s*(\PYGZbs{}\PYGZbs{}d+)\PYGZbs{}\PYGZbs{}s*(?:feet|ft\PYGZbs{}\PYGZbs{}.|ft|\PYGZsq{}))?(?:(\PYGZbs{}\PYGZbs{}d+)\PYGZbs{}\PYGZbs{}s*(?:inches|in\PYGZbs{}\PYGZbs{}.|in|\PYGZsq{}\PYGZsq{}|\PYGZbs{}\PYGZdq{}))?\PYGZdq{}}\PYG{o}{);}


\PYG{k+kd}{c} \PYG{n}{GraphExtension} \PYG{n+nf}{init}\PYG{o}{(}\PYG{n}{GraphHopper} \PYG{n}{graphhopper}\PYG{o}{)}
\PYG{k+kd}{ows} \PYG{n}{Exception} \PYG{o}{\PYGZob{}}
\PYG{n}{\PYGZus{}storage} \PYG{o}{!=} \PYG{k+kc}{null}\PYG{o}{)}
\PYG{k}{ow} \PYG{k}{new} \PYG{n}{Exception}\PYG{o}{(}
\PYG{l+s}{GraphStorageBuilder has been already initialized.\PYGZdq{}}\PYG{o}{);}

\PYG{n}{\PYGZus{}parameters} \PYG{o}{!=} \PYG{k+kc}{null}\PYG{o}{)} \PYG{o}{\PYGZob{}}
\PYG{n}{ing} \PYG{n}{value} \PYG{o}{=} \PYG{n}{\PYGZus{}parameters}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}restrictions\PYGZdq{}}\PYG{o}{);}
\PYG{o}{(!}\PYG{n}{Helper}\PYG{o}{.}\PYG{n+na}{isEmpty}\PYG{o}{(}\PYG{n}{value}\PYG{o}{))}
\PYG{n}{ncludeRestrictions} \PYG{o}{=} \PYG{n}{Boolean}\PYG{o}{.}\PYG{n+na}{parseBoolean}\PYG{o}{(}
\PYG{n}{value}\PYG{o}{);}


\PYG{n}{rage} \PYG{o}{=} \PYG{k}{new} \PYG{n}{EmergencyVehicleAttributesGraphStorage}\PYG{o}{(}
\PYG{n}{ncludeRestrictions}\PYG{o}{);}

\PYG{k}{rn} \PYG{n}{\PYGZus{}storage}\PYG{o}{;}


\PYG{n+nd}{ride}
\PYG{k+kd}{c} \PYG{k+kt}{void} \PYG{n+nf}{processWay}\PYG{o}{(}\PYG{n}{ReaderWay} \PYG{n}{way}\PYG{o}{)} \PYG{o}{\PYGZob{}}

\PYG{n}{Type} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{;}

\PYG{n}{\PYGZus{}hasRestrictionValues}\PYG{o}{)} \PYG{o}{\PYGZob{}}
\PYG{n}{strictionValues}\PYG{o}{[}\PYG{l+m+mi}{0}\PYG{o}{]} \PYG{o}{=} \PYG{l+m+mf}{0.0}\PYG{o}{;}
\PYG{n}{strictionValues}\PYG{o}{[}\PYG{l+m+mi}{1}\PYG{o}{]} \PYG{o}{=} \PYG{l+m+mf}{0.0}\PYG{o}{;}
\PYG{n}{strictionValues}\PYG{o}{[}\PYG{l+m+mi}{2}\PYG{o}{]} \PYG{o}{=} \PYG{l+m+mf}{0.0}\PYG{o}{;}
\PYG{n}{strictionValues}\PYG{o}{[}\PYG{l+m+mi}{3}\PYG{o}{]} \PYG{o}{=} \PYG{l+m+mf}{0.0}\PYG{o}{;}
\PYG{n}{strictionValues}\PYG{o}{[}\PYG{l+m+mi}{4}\PYG{o}{]} \PYG{o}{=} \PYG{l+m+mf}{0.0}\PYG{o}{;}

\PYG{n}{sRestrictionValues} \PYG{o}{=} \PYG{k+kc}{false}\PYG{o}{;}


\PYG{k+kt}{ean} \PYG{n}{hasHighway} \PYG{o}{=} \PYG{n}{way}\PYG{o}{.}\PYG{n+na}{hasTag}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}highway\PYGZdq{}}\PYG{o}{);}
\PYG{n}{hasHighway} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{way}\PYG{o}{.}\PYG{n+na}{hasTag}\PYG{o}{(}
\PYG{n}{otorVehicleRestrictions}\PYG{o}{,}
\PYG{n}{otorVehicleRestrictedValues}\PYG{o}{))} \PYG{o}{\PYGZob{}}\PYG{c+c1}{// only one}
							\PYG{c+c1}{// Type}
							\PYG{c+c1}{// is}
							\PYG{c+c1}{// needed}
							\PYG{c+c1}{// for}
							\PYG{c+c1}{// now}
\PYG{n}{vType} \PYG{o}{|=} \PYG{l+m+mi}{0}\PYG{o}{;}
\PYG{c+c1}{\PYGZus{}hgvType |= HeavyVehicleAttributes.BUS;}
\PYG{c+c1}{\PYGZus{}hgvType |=}
\PYG{c+c1}{HeavyVehicleAttributes.AGRICULTURE;}
\PYG{c+c1}{\PYGZus{}hgvType |= HeavyVehicleAttributes.FORESTRY;}
\PYG{c+c1}{\PYGZus{}hgvType |= HeavyVehicleAttributes.DELIVERY;}
\PYG{c+c1}{\PYGZus{}hgvType |= HeavyVehicleAttributes.GOODS;}
\PYG{c+c1}{\PYGZus{}hgvType |= HeavyVehicleAttributes.HGV;}


\PYG{o}{.}\PYG{n+na}{util}\PYG{o}{.}\PYG{n+na}{Iterator}\PYG{o}{\PYGZlt{}}\PYG{n}{Entry}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{,} \PYG{n}{Object}\PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{it} \PYG{o}{=} \PYG{n}{way}
\PYG{n+na}{etProperties}\PYG{o}{();}

\PYG{k}{e} \PYG{o}{(}\PYG{n}{it}\PYG{o}{.}\PYG{n+na}{hasNext}\PYG{o}{())} \PYG{o}{\PYGZob{}}
\PYG{o}{.}\PYG{n+na}{Entry}\PYG{o}{\PYGZlt{}}\PYG{n}{String}\PYG{o}{,} \PYG{n}{Object}\PYG{o}{\PYGZgt{}} \PYG{n}{pairs} \PYG{o}{=} \PYG{n}{it}\PYG{o}{.}\PYG{n+na}{next}\PYG{o}{();}
\PYG{n}{ing} \PYG{n}{key} \PYG{o}{=} \PYG{n}{pairs}\PYG{o}{.}\PYG{n+na}{getKey}\PYG{o}{();}
\PYG{n}{ing} \PYG{n}{value} \PYG{o}{=} \PYG{n}{pairs}\PYG{o}{.}\PYG{n+na}{getValue}\PYG{o}{().}\PYG{n+na}{toString}\PYG{o}{();}

\PYG{o}{(}\PYG{n}{hasHighway}\PYG{o}{)} \PYG{o}{\PYGZob{}}
 \PYG{o}{(}\PYG{n}{key}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}highway\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
\PYG{k}{f} \PYG{o}{(}\PYG{n}{value}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}motorway\PYGZdq{}}\PYG{o}{)} \PYG{o}{||} \PYG{n}{value}
	\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}motorway\PYGZus{}link\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
 \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{n}{value}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}steps\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
 \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{l+s}{\PYGZdq{}track\PYGZdq{}}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{n}{value}\PYG{o}{))} \PYG{o}{\PYGZob{}}
\PYG{n}{String} \PYG{n}{tracktype} \PYG{o}{=} \PYG{n}{way}\PYG{o}{.}\PYG{n+na}{getTag}\PYG{o}{(}
		\PYG{l+s}{\PYGZdq{}tracktype\PYGZdq{}}\PYG{o}{);}
\PYG{k}{if} \PYG{o}{(}\PYG{n}{tracktype} \PYG{o}{!=} \PYG{k+kc}{null} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{o}{(}\PYG{n}{tracktype}
		\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}grade1\PYGZdq{}}\PYG{o}{)}
		\PYG{o}{||} \PYG{n}{tracktype}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}
				\PYG{l+s}{\PYGZdq{}grade2\PYGZdq{}}\PYG{o}{)}
		\PYG{o}{||} \PYG{n}{tracktype}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}
				\PYG{l+s}{\PYGZdq{}grade3\PYGZdq{}}\PYG{o}{)}
		\PYG{o}{||} \PYG{n}{tracktype}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}
				\PYG{l+s}{\PYGZdq{}grade4\PYGZdq{}}\PYG{o}{)}
		\PYG{o}{||} \PYG{n}{tracktype}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}
				\PYG{l+s}{\PYGZdq{}grade5\PYGZdq{}}\PYG{o}{)))} \PYG{o}{\PYGZob{}}
	\PYG{n}{\PYGZus{}hgvType} \PYG{o}{|=} \PYG{n}{HeavyVehicleAttributes}\PYG{o}{.}\PYG{n+na}{AGRICULTURE}\PYG{o}{;}
	\PYG{n}{\PYGZus{}hgvType} \PYG{o}{|=} \PYG{n}{HeavyVehicleAttributes}\PYG{o}{.}\PYG{n+na}{FORESTRY}\PYG{o}{;}
\PYG{o}{\PYGZcb{}}




\PYG{c+cm}{ todo borders}
\PYG{c+cm}{/}
\PYG{k}{se} \PYG{o}{\PYGZob{}}
\PYG{k}{f} \PYG{o}{(}\PYG{n}{\PYGZus{}includeRestrictions}\PYG{o}{)} \PYG{o}{\PYGZob{}}
\PYG{k+kt}{int} \PYG{n}{valueIndex} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{o}{;}

\PYG{k}{if} \PYG{o}{(}\PYG{n}{key}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}maxheight\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
	\PYG{n}{valueIndex} \PYG{o}{=} \PYG{n}{VehicleDimensionRestrictions}\PYG{o}{.}\PYG{n+na}{MaxHeight}\PYG{o}{;}
\PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{n}{key}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}
		\PYG{l+s}{\PYGZdq{}maxweight\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
	\PYG{n}{valueIndex} \PYG{o}{=} \PYG{n}{VehicleDimensionRestrictions}\PYG{o}{.}\PYG{n+na}{MaxWeight}\PYG{o}{;}
\PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{n}{key}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}
		\PYG{l+s}{\PYGZdq{}maxweight:hgv\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
	\PYG{n}{valueIndex} \PYG{o}{=} \PYG{n}{VehicleDimensionRestrictions}\PYG{o}{.}\PYG{n+na}{MaxWeight}\PYG{o}{;}
\PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{n}{key}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}maxwidth\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
	\PYG{n}{valueIndex} \PYG{o}{=} \PYG{n}{VehicleDimensionRestrictions}\PYG{o}{.}\PYG{n+na}{MaxWidth}\PYG{o}{;}
\PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{n}{key}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}
		\PYG{l+s}{\PYGZdq{}maxlength\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
	\PYG{n}{valueIndex} \PYG{o}{=} \PYG{n}{VehicleDimensionRestrictions}\PYG{o}{.}\PYG{n+na}{MaxLength}\PYG{o}{;}
\PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{n}{key}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}
		\PYG{l+s}{\PYGZdq{}maxlength:hgv\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
	\PYG{n}{valueIndex} \PYG{o}{=} \PYG{n}{VehicleDimensionRestrictions}\PYG{o}{.}\PYG{n+na}{MaxLength}\PYG{o}{;}
\PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{n}{key}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}
		\PYG{l+s}{\PYGZdq{}maxaxleload\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
	\PYG{n}{valueIndex} \PYG{o}{=} \PYG{n}{VehicleDimensionRestrictions}\PYG{o}{.}\PYG{n+na}{MaxAxleLoad}\PYG{o}{;}
\PYG{o}{\PYGZcb{}}

\PYG{k}{if} \PYG{o}{(}\PYG{n}{valueIndex} \PYG{o}{\PYGZgt{}=} \PYG{l+m+mi}{0} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{o}{!(}\PYG{l+s}{\PYGZdq{}none\PYGZdq{}}
		\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{n}{value}\PYG{o}{)} \PYG{o}{||} \PYG{l+s}{\PYGZdq{}default\PYGZdq{}}
				\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{n}{value}\PYG{o}{)))} \PYG{o}{\PYGZob{}}
	\PYG{k}{if} \PYG{o}{(}\PYG{n}{valueIndex} \PYG{o}{==} \PYG{n}{VehicleDimensionRestrictions}\PYG{o}{.}\PYG{n+na}{MaxWeight}
			\PYG{o}{||} \PYG{n}{valueIndex} \PYG{o}{==} \PYG{n}{VehicleDimensionRestrictions}\PYG{o}{.}\PYG{n+na}{MaxAxleLoad}\PYG{o}{)} \PYG{o}{\PYGZob{}}
		\PYG{k}{if} \PYG{o}{(}\PYG{n}{value}\PYG{o}{.}\PYG{n+na}{contains}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}t\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
			\PYG{n}{value} \PYG{o}{=} \PYG{n}{value}\PYG{o}{.}\PYG{n+na}{replace}\PYG{o}{(}
					\PYG{l+s+sc}{\PYGZsq{}t\PYGZsq{}}\PYG{o}{,} \PYG{l+s+sc}{\PYGZsq{} \PYGZsq{}}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{n}{value}\PYG{o}{.}\PYG{n+na}{contains}\PYG{o}{(}
				\PYG{l+s}{\PYGZdq{}lbs\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
			\PYG{n}{value} \PYG{o}{=} \PYG{n}{value}\PYG{o}{.}\PYG{n+na}{replace}\PYG{o}{(}
					\PYG{l+s}{\PYGZdq{}lbs\PYGZdq{}}\PYG{o}{,} \PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{o}{);}
			\PYG{n}{value} \PYG{o}{=} \PYG{n}{Double}\PYG{o}{.}\PYG{n+na}{toString}\PYG{o}{(}
					\PYG{n}{Double}\PYG{o}{.}\PYG{n+na}{parseDouble}\PYG{o}{(}
							\PYG{n}{value}\PYG{o}{)}
							\PYG{o}{/} \PYG{l+m+mf}{2204.622}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{o}{\PYGZob{}}
		\PYG{k}{if} \PYG{o}{(}\PYG{n}{value}\PYG{o}{.}\PYG{n+na}{contains}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}m\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
			\PYG{n}{value} \PYG{o}{=} \PYG{n}{value}\PYG{o}{.}\PYG{n+na}{replace}\PYG{o}{(}
					\PYG{l+s+sc}{\PYGZsq{}m\PYGZsq{}}\PYG{o}{,} \PYG{l+s+sc}{\PYGZsq{} \PYGZsq{}}\PYG{o}{);}
		\PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{o}{(}\PYG{n}{value}\PYG{o}{.}\PYG{n+na}{contains}\PYG{o}{(}
				\PYG{l+s}{\PYGZdq{}\PYGZsq{}\PYGZdq{}}\PYG{o}{))} \PYG{o}{\PYGZob{}}
			\PYG{n}{Matcher} \PYG{n}{m} \PYG{o}{=} \PYG{n}{\PYGZus{}patternHeight}
					\PYG{o}{.}\PYG{n+na}{matcher}\PYG{o}{(}\PYG{n}{value}\PYG{o}{);}
			\PYG{k}{if} \PYG{o}{(}\PYG{n}{m}\PYG{o}{.}\PYG{n+na}{find}\PYG{o}{())} \PYG{o}{\PYGZob{}}
				\PYG{k+kt}{int} \PYG{n}{feet} \PYG{o}{=} \PYG{n}{Integer}
						\PYG{o}{.}\PYG{n+na}{parseInt}\PYG{o}{(}\PYG{n}{m}
								\PYG{o}{.}\PYG{n+na}{group}\PYG{o}{(}\PYG{l+m+mi}{1}\PYG{o}{));}
				\PYG{k+kt}{int} \PYG{n}{inches} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{o}{;}
				\PYG{k}{if} \PYG{o}{(}\PYG{n}{m}\PYG{o}{.}\PYG{n+na}{groupCount}\PYG{o}{()} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1}\PYG{o}{)}
					\PYG{n}{inches} \PYG{o}{=} \PYG{n}{Integer}
							\PYG{o}{.}\PYG{n+na}{parseInt}\PYG{o}{(}
									\PYG{n}{m}\PYG{o}{.}\PYG{n+na}{group}\PYG{o}{(}\PYG{l+m+mi}{2}\PYG{o}{));}
				\PYG{k+kt}{double} \PYG{n}{newValue} \PYG{o}{=} \PYG{n}{feet}
						\PYG{o}{*} \PYG{l+m+mf}{0.3048}
						\PYG{o}{+} \PYG{n}{inches} \PYG{o}{*} \PYG{l+m+mf}{0.0254}
								\PYG{o}{*} \PYG{n}{feet}\PYG{o}{;}
				\PYG{n}{value} \PYG{o}{=} \PYG{n}{Double}
						\PYG{o}{.}\PYG{n+na}{toString}\PYG{o}{(}
								\PYG{n}{newValue}\PYG{o}{);}
			\PYG{o}{\PYGZcb{}}
		\PYG{o}{\PYGZcb{}}
	\PYG{o}{\PYGZcb{}}

	\PYG{n}{\PYGZus{}restrictionValues}\PYG{o}{[}\PYG{n}{valueIndex}\PYG{o}{]} \PYG{o}{=} \PYG{n}{Double}
			\PYG{o}{.}\PYG{n+na}{parseDouble}\PYG{o}{(}\PYG{n}{value}\PYG{o}{);}
	\PYG{n}{\PYGZus{}hasRestrictionValues} \PYG{o}{=} \PYG{k+kc}{true}\PYG{o}{;}
\PYG{o}{\PYGZcb{}}


\PYG{c+c1}{/ access Tags for different Vehicles,}
\PYG{c+c1}{/ not needed}

\PYG{c+c1}{/ String hgvTag =}
\PYG{c+c1}{/ getHeavyVehicleValue(key, \PYGZdq{}hgv\PYGZdq{},}
\PYG{c+c1}{/ value); //key.equals(\PYGZdq{}hgv\PYGZdq{}) ? value :}
\PYG{c+c1}{/ null;}
\PYG{c+c1}{/ String goodsTag =}
\PYG{c+c1}{/ getHeavyVehicleValue(key, \PYGZdq{}goods\PYGZdq{},}
\PYG{c+c1}{/ value); // key.equals(\PYGZdq{}goods\PYGZdq{}) ?}
\PYG{c+c1}{/ value : null;}
\PYG{c+c1}{/ String busTag =}
\PYG{c+c1}{/ getHeavyVehicleValue(key, \PYGZdq{}bus\PYGZdq{},}
\PYG{c+c1}{/ value); //key.equals(\PYGZdq{}bus\PYGZdq{}) ? value :}
\PYG{c+c1}{/ null;}
\PYG{c+c1}{/ String agriculturalTag =}
\PYG{c+c1}{/ getHeavyVehicleValue(key,}
\PYG{c+c1}{/ \PYGZdq{}agricultural\PYGZdq{}, value);}
\PYG{c+c1}{/ //key.equals(\PYGZdq{}agricultural\PYGZdq{}) ? value}
\PYG{c+c1}{/ : null;}
\PYG{c+c1}{/ String forestryTag =}
\PYG{c+c1}{/ getHeavyVehicleValue(key, \PYGZdq{}forestry\PYGZdq{},}
\PYG{c+c1}{/ value); // key.equals(\PYGZdq{}forestry\PYGZdq{}) ?}
\PYG{c+c1}{/ value : null;}
\PYG{c+c1}{/ String deliveryTag =}
\PYG{c+c1}{/ getHeavyVehicleValue(key, \PYGZdq{}delivery\PYGZdq{},}
\PYG{c+c1}{/ value); //key.equals(\PYGZdq{}delivery\PYGZdq{}) ?}
\PYG{c+c1}{/ value : null;}

\PYG{c+c1}{/ String accessTag =}
\PYG{c+c1}{/ key.equals(\PYGZdq{}access\PYGZdq{}) ? value : null;}

\PYG{c+c1}{/ if (Helper.isEmpty(accessTag)) \PYGZob{}}
\PYG{c+c1}{/ if (\PYGZdq{}agricultural\PYGZdq{}.equals(accessTag))}
\PYG{c+c1}{/ agriculturalTag = \PYGZdq{}yes\PYGZdq{};}
\PYG{c+c1}{/ else if}
\PYG{c+c1}{/ (\PYGZdq{}forestry\PYGZdq{}.equals(accessTag))}
\PYG{c+c1}{/ forestryTag = \PYGZdq{}yes\PYGZdq{};}
\PYG{c+c1}{/ else if (\PYGZdq{}bus\PYGZdq{}.equals(accessTag))}
\PYG{c+c1}{/ busTag = \PYGZdq{}yes\PYGZdq{};}
\PYG{c+c1}{/ \PYGZcb{}}

\PYG{c+c1}{/ String motorVehicle =}
\PYG{c+c1}{/ key.equals(\PYGZdq{}motor\PYGZus{}vehicle\PYGZdq{}) ? value :}
\PYG{c+c1}{/ null;}
\PYG{c+c1}{/ if (motorVehicle == null)}
\PYG{c+c1}{/ motorVehicle = key.equals(\PYGZdq{}motorcar\PYGZdq{})}
\PYG{c+c1}{/ ? value : null;}

\PYG{c+c1}{/ if (motorVehicle != null) \PYGZob{}}
\PYG{c+c1}{/ if}
\PYG{c+c1}{/ (\PYGZdq{}agricultural\PYGZdq{}.equals(motorVehicle))}
\PYG{c+c1}{/ agriculturalTag = \PYGZdq{}yes\PYGZdq{};}
\PYG{c+c1}{/ else if}
\PYG{c+c1}{/ (\PYGZdq{}forestry\PYGZdq{}.equals(motorVehicle))}
\PYG{c+c1}{/ forestryTag = \PYGZdq{}yes\PYGZdq{};}
\PYG{c+c1}{/ else if}
\PYG{c+c1}{/ (\PYGZdq{}delivery\PYGZdq{}.equals(motorVehicle))}
\PYG{c+c1}{/ deliveryTag = \PYGZdq{}yes\PYGZdq{};}

\PYG{c+c1}{/ //if}
\PYG{c+c1}{/ (\PYGZdq{}destination\PYGZdq{}.equals(motorVehicle))}
\PYG{c+c1}{/ // heavyVehicleFlag |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.Destination;}
\PYG{c+c1}{/ \PYGZcb{}}

\PYG{c+c1}{/ if (goodsTag != null) \PYGZob{}}
\PYG{c+c1}{/ if (\PYGZdq{}no\PYGZdq{}.equals(goodsTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.GOODS;}
\PYG{c+c1}{/ else if (\PYGZdq{}yes\PYGZdq{}.equals(busTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType \PYGZam{}=}
\PYG{c+c1}{/ \PYGZti{}HeavyVehicleAttributes.GOODS;}
\PYG{c+c1}{/ else if}
\PYG{c+c1}{/ (\PYGZdq{}destination\PYGZdq{}.equals(goodsTag))}
\PYG{c+c1}{/ \PYGZob{}}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.GOODS;}
\PYG{c+c1}{/ \PYGZus{}hgvDestination |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.GOODS;//(1 \PYGZlt{}\PYGZlt{}}
\PYG{c+c1}{/ (HeavyVehicleAttributes.Goods \PYGZgt{}\PYGZgt{} 1));}
\PYG{c+c1}{/ \PYGZcb{}}
\PYG{c+c1}{/ \PYGZcb{}}

\PYG{c+c1}{/ if (hgvTag != null) \PYGZob{}}
\PYG{c+c1}{/ if (\PYGZdq{}no\PYGZdq{}.equals(hgvTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.HGV;}
\PYG{c+c1}{/ else if (\PYGZdq{}yes\PYGZdq{}.equals(busTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType \PYGZam{}=}
\PYG{c+c1}{/ \PYGZti{}HeavyVehicleAttributes.HGV;}
\PYG{c+c1}{/ else if}
\PYG{c+c1}{/ (\PYGZdq{}destination\PYGZdq{}.equals(hgvTag))}
\PYG{c+c1}{/ \PYGZob{}}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.HGV;}
\PYG{c+c1}{/ \PYGZus{}hgvDestination |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.HGV;// (1 \PYGZlt{}\PYGZlt{}}
\PYG{c+c1}{/ (HeavyVehicleAttributes.Hgv \PYGZgt{}\PYGZgt{} 1));}
\PYG{c+c1}{/ \PYGZcb{}}
\PYG{c+c1}{/ \PYGZcb{}}

\PYG{c+c1}{/ if (busTag != null) \PYGZob{}}
\PYG{c+c1}{/ if (\PYGZdq{}no\PYGZdq{}.equals(busTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.BUS;}
\PYG{c+c1}{/ else if (\PYGZdq{}yes\PYGZdq{}.equals(busTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType \PYGZam{}=}
\PYG{c+c1}{/ \PYGZti{}HeavyVehicleAttributes.BUS;}
\PYG{c+c1}{/ else if}
\PYG{c+c1}{/ (\PYGZdq{}destination\PYGZdq{}.equals(busTag))}
\PYG{c+c1}{/ \PYGZob{}}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.BUS;}
\PYG{c+c1}{/ \PYGZus{}hgvDestination |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.BUS; //(1 \PYGZlt{}\PYGZlt{}}
\PYG{c+c1}{/ (HeavyVehicleAttributes.Bus \PYGZgt{}\PYGZgt{} 1));}
\PYG{c+c1}{/ \PYGZcb{}}
\PYG{c+c1}{/ \PYGZcb{}}

\PYG{c+c1}{/ if (agriculturalTag != null) \PYGZob{}}
\PYG{c+c1}{/ if (\PYGZdq{}no\PYGZdq{}.equals(agriculturalTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.AGRICULTURE;}
\PYG{c+c1}{/ else if (\PYGZdq{}yes\PYGZdq{}.equals(busTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType \PYGZam{}=}
\PYG{c+c1}{/ \PYGZti{}HeavyVehicleAttributes.AGRICULTURE;}
\PYG{c+c1}{/ else if}
\PYG{c+c1}{/ (\PYGZdq{}destination\PYGZdq{}.equals(agriculturalTag))}
\PYG{c+c1}{/ \PYGZob{}}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.AGRICULTURE;}
\PYG{c+c1}{/ \PYGZus{}hgvDestination |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.AGRICULTURE;//}
\PYG{c+c1}{/ (1 \PYGZlt{}\PYGZlt{}}
\PYG{c+c1}{/ (HeavyVehicleAttributes.Agricultural}
\PYG{c+c1}{/ \PYGZgt{}\PYGZgt{} 1));}
\PYG{c+c1}{/ \PYGZcb{}}
\PYG{c+c1}{/ \PYGZcb{} else}

\PYG{c+c1}{/ if (forestryTag != null) \PYGZob{}}
\PYG{c+c1}{/ if (\PYGZdq{}no\PYGZdq{}.equals(forestryTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.FORESTRY;}
\PYG{c+c1}{/ else if (\PYGZdq{}yes\PYGZdq{}.equals(busTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType \PYGZam{}=}
\PYG{c+c1}{/ \PYGZti{}HeavyVehicleAttributes.FORESTRY;}
\PYG{c+c1}{/ else if}
\PYG{c+c1}{/ (\PYGZdq{}destination\PYGZdq{}.equals(forestryTag))}
\PYG{c+c1}{/ \PYGZob{}}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.FORESTRY;}
\PYG{c+c1}{/ \PYGZus{}hgvDestination |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.FORESTRY;//(1}
\PYG{c+c1}{/ \PYGZlt{}\PYGZlt{} (HeavyVehicleAttributes.Forestry}
\PYG{c+c1}{/ \PYGZgt{}\PYGZgt{} 1));}
\PYG{c+c1}{/ \PYGZcb{}}
\PYG{c+c1}{/ \PYGZcb{}}

\PYG{c+c1}{/ if (deliveryTag != null) \PYGZob{}}
\PYG{c+c1}{/ if (\PYGZdq{}no\PYGZdq{}.equals(deliveryTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.DELIVERY;}
\PYG{c+c1}{/ else if (\PYGZdq{}yes\PYGZdq{}.equals(busTag))}
\PYG{c+c1}{/ \PYGZus{}hgvType \PYGZam{}=}
\PYG{c+c1}{/ \PYGZti{}HeavyVehicleAttributes.DELIVERY;}
\PYG{c+c1}{/ else if}
\PYG{c+c1}{/ (\PYGZdq{}destination\PYGZdq{}.equals(deliveryTag) ||}
\PYG{c+c1}{/ \PYGZdq{}delivery\PYGZdq{}.equals(deliveryTag) )}
\PYG{c+c1}{/ \PYGZob{}}
\PYG{c+c1}{/ \PYGZus{}hgvType |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.DELIVERY;}
\PYG{c+c1}{/ \PYGZus{}hgvDestination |=}
\PYG{c+c1}{/ HeavyVehicleAttributes.DELIVERY; //(1}
\PYG{c+c1}{/ \PYGZlt{}\PYGZlt{} (HeavyVehicleAttributes.Delivery}
\PYG{c+c1}{/ \PYGZgt{}\PYGZgt{} 1));}
\PYG{c+c1}{/ \PYGZcb{}}
\PYG{c+c1}{/ \PYGZcb{}}

\PYG{c+c1}{/ might be usable for some hazardous}
\PYG{c+c1}{/ transport, left in for now}
\PYG{n}{tring} \PYG{n}{hazmatTag} \PYG{o}{=} \PYG{n}{key}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}hazmat\PYGZdq{}}\PYG{o}{)}
	\PYG{o}{?} \PYG{n}{value}
	\PYG{o}{:} \PYG{k+kc}{null}\PYG{o}{;}
\PYG{k}{f} \PYG{o}{(}\PYG{l+s}{\PYGZdq{}no\PYGZdq{}}\PYG{o}{.}\PYG{n+na}{equals}\PYG{o}{(}\PYG{n}{hazmatTag}\PYG{o}{))} \PYG{o}{\PYGZob{}}
\PYG{n}{\PYGZus{}hgvType} \PYG{o}{|=} \PYG{n}{HeavyVehicleAttributes}\PYG{o}{.}\PYG{n+na}{HAZMAT}\PYG{o}{;}


\PYG{c+c1}{/ (access=no) +}
\PYG{c+c1}{/ access:conditional=delivery @}
\PYG{c+c1}{/ (07:00\PYGZhy{}11:00); customer @}
\PYG{c+c1}{/ (07:00\PYGZhy{}17:00)}





\PYG{n+nd}{ride}
\PYG{k+kd}{c} \PYG{k+kt}{void} \PYG{n+nf}{processEdge}\PYG{o}{(}\PYG{n}{ReaderWay} \PYG{n}{way}\PYG{o}{,}
\PYG{n}{eIteratorState} \PYG{n}{edge}\PYG{o}{)} \PYG{o}{\PYGZob{}}
\PYG{c+c1}{f (\PYGZus{}hgvType \PYGZgt{} HeavyVehicleAttributes.UNKNOWN ||}
\PYG{c+c1}{hgvDestination \PYGZgt{} 0 || \PYGZus{}hasRestrictionValues)}

\PYG{o}{(}\PYG{n}{\PYGZus{}hasRestrictionValues}\PYG{o}{)}
\PYG{n}{torage}\PYG{o}{.}\PYG{n+na}{setEdgeValue}\PYG{o}{(}\PYG{n}{edge}\PYG{o}{.}\PYG{n+na}{getEdge}\PYG{o}{(),}
\PYG{n}{\PYGZus{}hgvType}\PYG{o}{,} \PYG{l+m+mi}{0}\PYG{o}{,} \PYG{n}{\PYGZus{}restrictionValues}\PYG{o}{);}
\PYG{k}{e}
\PYG{n}{torage}\PYG{o}{.}\PYG{n+na}{setEdgeValue}\PYG{o}{(}\PYG{n}{edge}\PYG{o}{.}\PYG{n+na}{getEdge}\PYG{o}{(),}
\PYG{n}{\PYGZus{}hgvType}\PYG{o}{,} \PYG{l+m+mi}{0}\PYG{o}{,} \PYG{k+kc}{null}\PYG{o}{);}



\PYG{n+nd}{ride}
\PYG{k+kd}{c} \PYG{n}{String} \PYG{n+nf}{getName}\PYG{o}{()} \PYG{o}{\PYGZob{}}
\PYG{k}{rn} \PYG{l+s}{\PYGZdq{}EmergencyVehicle\PYGZdq{}}\PYG{o}{;}


\end{Verbatim}
